{"version":3,"sources":["firebase.js","components/navbar.js","components/sidebar/sidebarHeader.js","components/sidebar/sidebarItemsData.js","components/sidebar/sidebarItems.js","components/sidebar/newChannels.js","ReduxToolkit/channelSlice.js","components/sidebar/sidebarChannels.js","components/sidebar/sidebar.js","components/chats/chatsHeader.js","ReduxToolkit/textMessages.js","components/chats/otabek.jpg","components/chats/chatInputComponent.js","components/chats/ChatMessages.js","components/chats/chats.js","pages/slackFoto.jpg","pages/login.js","App.js","ReduxToolkit/channelName.js","ReduxToolkit/rootReducer.js","ReduxToolkit/store.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Navbar","useState","state","setState","useEffect","onAuthStateChanged","user","email","NavbarPage","SearchInput","AccessIcon","type","placeholder","HelpIcon","UserContainer","Name","ImageFoto","Logout","onClick","signOut","then","u","localStorage","removeItem","styled","div","SidebarHeader","props","Users","UserName","AddIcon","ItemDatas","key","id","icon","text","SidebarItems","Container","map","item","Item","Icons","Text","ChannelsList","history","useHistory","channelInfos","useSelector","channels","console","log","NewChannels","List","UserChannel","push","name","DeleteIcon","e","preventDefault","deleteChannelBtn","ChannelSlice","createSlice","initialState","reducers","addChannel","action","payload","deleteChannel","actions","SidebarChannels","rooms","setRooms","Channels","ChannelAdd","Icon","promptName","prompt","some","alert","collection","add","Sidebar","Header","Items","ChatsHeader","channelName","setChannelName","channelId","useParams","doc","onSnapshot","snapshot","data","Channel","ChannelName","undefined","ChannelInfo","ChannelDetails","DetailInfo","DetailIcon","TextMessages","addMessage","ChatInputComponent","setText","setUser","InputContainer","value","onChange","target","SendButton","userImage","AvatarPhoto","timeStamp","Timestamp","now","toDate","toGMTString","getMessages","button","ChatMessages","messages","setMessages","orderBy","texts","docs","length","MessageContent","src","alt","Time","Content","img","Chats","ChatContainer","LoginPage","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearErrors","setItem","Image","slackFoto","onSubmit","Input","required","autofocus","Label","signInWithEmailAndPassword","catch","error","code","message","createUserWithEmailAndPassword","App","dispatch","useDispatch","userName","userEmail","setUserEmail","infos","className","Main","path","EmptyChat","addName","rootReducer","combineReducers","channelReducer","channelNameReducer","textMessages","textMessagesReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a90a158.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCYQ_uYOrHl29LTBY3TI-bGKILCpUR-LIk\",\r\n  authDomain: \"slack-clone-app-4be0d.firebaseapp.com\",\r\n  projectId: \"slack-clone-app-4be0d\",\r\n  storageBucket: \"slack-clone-app-4be0d.appspot.com\",\r\n  messagingSenderId: \"291000384420\",\r\n  appId: \"1:291000384420:web:9372bb53dc4900e30b5f31\"\r\n};\r\n export const fire = firebase.initializeApp(firebaseConfig);\r\nconst db = fire.firestore();\r\nconst auth=firebase.auth();\r\n//const provider=new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {auth}\r\nexport default db;","import React, {useState,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Link} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport {auth} from '../firebase';\r\n//import {useSelector} from \"react-redux\";\r\n//import {useHistory} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  //const userName=useSelector(state=>state.userName)\r\n//const dispatch=useDispatch()\r\n//const history=useHistory()\r\nconst [state, setState] = useState('')\r\n\r\nconst handleSignOut=()=>{\r\n  auth.signOut().then((u)=>{\r\n    localStorage.removeItem(\"ishtirokchi\")\r\n  })\r\n    \r\n}\r\nconst getEmail=()=>{\r\n  auth.onAuthStateChanged((user)=>{\r\nsetState(user.email)\r\n  })\r\n}\r\nuseEffect(() => {\r\n getEmail()\r\n}, [state])\r\n\r\n  return (\r\n    <NavbarPage>\r\n  \r\n    <SearchInput>\r\n    <AccessIcon>\r\n<AccessTimeIcon/>\r\n</AccessIcon>\r\n    <input \r\n    type=\"text\"\r\n    placeholder=\"search \"\r\n    />\r\n    <HelpIcon>\r\n    <HelpOutlineIcon/>\r\n    </HelpIcon>\r\n    </SearchInput>\r\n     <UserContainer>\r\n     <Name>\r\n</Name>\r\n<ImageFoto>\r\n<AccountBoxIcon/>\r\n</ImageFoto>\r\n{state}\r\n  <Logout>\r\n      <button onClick={handleSignOut}>Log out</button>\r\n      </Logout>\r\n</UserContainer>\r\n   </NavbarPage>\r\n \r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\nconst NavbarPage=styled.div`\r\ndisplay:flex;\r\nbackground-color:gray;\r\nposition:relative\r\n\r\n`\r\n\r\n\r\nconst SearchInput=styled.div`\r\nwidth:65%;\r\ndisplay:flex;\r\nalign-items:center;\r\nbackground-color:gray;\r\nmargin-left:50px;\r\n\r\ninput{\r\n\r\n\toutline: transparent;\r\nborder:0.5px solid lightgray;\r\nborder-radius:3px;\r\n\tbackground-color:transparent;\r\n\tmargin:0 3px;\r\n\twidth:100%;\r\n\tmin-width:350px;\r\n\tmax-width:650px;\r\n\theight:30px;\r\n\tpadding:0 5px;\r\ncolor:white;\r\n\r\n::placeholder{\r\n\tcolor:white;\r\n}\r\n:focus{\r\n\toutline:none\r\n}\r\n:hover{\r\n\tcolor:white;\r\n  cursor:default\r\n\r\n}\r\n\r\n}\r\n`\r\nconst AccessIcon=styled.div`\r\npadding:0 3px;\r\ncolor:white;\r\ncursor:pointer\r\n`\r\nconst HelpIcon=styled.div`\r\npadding:0 3px;\r\ncolor:white;cursor:pointer\r\n\r\n\r\n`\r\nconst UserContainer=styled.div`\r\nalign-items:center;\r\ndisplay:flex;\r\ntext-align:right;\r\nfloat:right;\r\nheight:45px;\r\ncolor:white;\r\nbackground-color:gray;\r\nmargin-right:6px;\r\nposition:absolute;\r\nright:0\r\n\r\n`\r\nconst Name=styled.div`\r\npadding:0 3px;\r\n`\r\nconst ImageFoto=styled.div``\r\n\r\nconst Logout=styled.div`\r\nbutton{\r\nmargin-left:10px;\r\nbackground-color:coral;\r\nborder-radius:3px;\r\nborder:none;\r\ncolor:white;\r\nfont-size:15 px;\r\nfont-family:\"Mukta\",sans-serif;\r\n  transition:0.4s ease;\r\n\r\n:hover{\r\n  background-color:royalblue\r\n}\r\n\r\n}`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst SidebarHeader = (props) => {\r\n  return (\r\n    <Users>\r\n    <UserName>\r\n    Fozilov Otabek\r\n    </UserName>\r\n    <AddIcon>\r\n    <AddCircleOutlineIcon/>\r\n\r\n    </AddIcon>\r\n\r\n\r\n    </Users>\r\n  )\r\n}\r\n\r\nexport default SidebarHeader;\r\nconst Users=styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\nheight:100%;\r\n`\r\nconst UserName=styled.div`\r\npadding:0 3px;\r\nfont-size:18px;\r\ncolor:#ffff;\r\ncursor:pointer\r\n`\r\nconst AddIcon=styled.div`\r\npadding:0 4px;\r\npadding-bottom:4px;\r\ncolor:black;\r\npadding-top:3px;\r\nborder:1px solid white;\r\nborder-radius:50%;\r\nbackground-color:white;\r\ncursor:pointer;\r\n:hover{\r\n\tbackground-color:gray;\r\n\tcolor:white\r\n}\r\n\r\n`","import MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nexport const ItemDatas=[\r\n{\r\n\tkey:10,\r\n\tid:1,\r\n\ticon:<MessageIcon/>,\r\n\ttext:\"Thread\"\r\n},\r\n{\r\n\tkey:11,\r\n\tid:2,\r\n\ticon:<InboxIcon/>,\r\n\ttext:\"All DMs\"\r\n},\r\n{\r\n\tkey:12,\r\n\tid:3,\r\n\ticon:<DraftsIcon/>,\r\n\ttext:\"Mentions & Reactions\"\r\n},\r\n{\r\n\tkey:13,\r\n\tid: 4,\r\n\ticon:<BookmarkBorderIcon/>,\r\n\ttext:\"Save Items\"\r\n},\r\n{\r\n\tkey:14,\r\n\tid: 5,\r\n\ticon:<PeopleIcon/>,\r\n\ttext:\"Peoples & Groups\"\r\n},\r\n{\r\n\tkey:15,\r\n\tid: 6,\r\n\ticon:<AppsIcon/>,\r\n\ttext:\"More\"\r\n}\r\n\r\n]","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ItemDatas} from \"./sidebarItemsData\";\r\n\r\nconst SidebarItems = (props) => {\r\n  return (\r\n    <Container>\r\n{ItemDatas.map((item)=>(\r\n\t<Item key={item.key} >\r\n<Icons key={item.text} >{item.icon}</Icons>\r\n<Text key={item.icon}>{item.text}</Text>\r\n\r\n\t</Item>\r\n\t))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SidebarItems;\r\n\r\nconst Container=styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\ntext-align:center;\r\njustify-content:center\r\n\r\n`\r\nconst Icons=styled.div`\r\nmargin:0 7px;\r\ncolor:#ffff;\r\ncursor:pointer\r\n\r\n`\r\nconst Item=styled.div`\r\npadding:3px;\r\npadding-left:0px;\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\ncursor:pointer;\r\n:hover{\r\n\tbackground-color:gray\r\n}\r\n\r\n\r\n`\r\nconst Text=styled.div`\r\ncolor:orange;\r\ncursor:pointer\r\n\r\n`","import React,{useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport db from \"../../firebase\";\r\n\r\n//import {addChannel,deleteChannel} from '../../ReduxToolkit/channelSlice.js'\r\n\r\nconst ChannelsList = () => {\r\n //const [channels, setChannels] = useState([])\r\n //const [inputText, setInputText] = useState('')\r\n const history=useHistory();\r\n const channelInfos=useSelector(state=>state.channels)\r\n//const dispatch=useDispatch()\r\n//-----------------------------\r\nconsole.log(channelInfos)\r\n//---------------------\r\nconst deleteChannelBtn=(e,id)=>{\r\n\te.preventDefault()\r\n/*const filteredChannel=channelInfos.filter(item=>(\r\n\titem.id!==id \r\n\t))*/\r\n//dispatch(addChannel(filteredChannel))\r\n}\r\n/*const take_channels=()=>{\r\n\tdb.collection(\"rooms\").onSnapshot(snapshot=>{\r\n\t\t\r\n\t})\r\n}*/\r\nconst goToChannel=(id)=>{\r\n    if(id){\r\nhistory.push(`/room/${id}`)\r\n    }\r\n}\r\nuseEffect(() => {\r\n\t//take_channels()\r\n}, [])\r\n//-------------------------------\r\n\r\n  return (\r\n    <NewChannels>\r\n    {channelInfos.map(item=>(\r\n    \t<List>  \t\r\n<UserChannel onClick={()=>goToChannel(item.id)}>\r\n<p key={item.id}>#{item.name}</p>\r\n<DeleteIcon>\r\n\t<DeleteOutlineIcon onClick={(e)=>deleteChannelBtn(e,item.id)}/>\r\n</DeleteIcon>\r\n</UserChannel>\r\n</List>\r\n    \t))}\r\n \r\n    </NewChannels>\r\n  )\r\n}\r\n\r\nexport default ChannelsList;\r\n\r\nconst NewChannels=styled.div``\r\nconst List=styled.div`\r\nwidth:100%;\r\nheight:30px;\r\nmargin-top:2px;\r\n:hover{\r\n\tbackground-color:orange;\r\n\tcursor:pointer;\r\n}\r\np{\r\n\tpadding-left:5px;\r\ncolor:white\r\n}\r\n\r\n`\r\nconst UserChannel=styled.div`\r\nmargin-top:10px;\r\ndisplay:flex;\r\njustify-content:space-between;\r\npadding:0 4px ;\r\ntext-align:center\r\n`\r\nconst DeleteIcon=styled.div`\r\ncolor:white;\r\nmargin-right:3px;\r\n:hover{\r\n\tcolor:black;\r\n\tfont-weight:bolder\r\n}\r\n\r\n`\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState=[\"initialState\"]\r\n\r\nconst ChannelSlice=createSlice({\r\n\tname:\"channels\",\r\n\tinitialState,\r\n\treducers:{\r\n\t\taddChannel:(state,action)=>{\r\n\t\t\t\r\n\t\t\treturn [...action.payload]\r\n\t\t},\r\n\t\tdeleteChannel:(state)=>{\r\n\t\t\treturn state=[]\r\n\t\t}\r\n\t}\r\n})\r\nexport const {addChannel,deleteChannel}=ChannelSlice.actions;\r\nexport default ChannelSlice.reducer","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NewChannel from './newChannels';\r\nimport {useSelector} from \"react-redux\"\r\nimport {addChannel} from \"../../ReduxToolkit/channelSlice\"\r\nimport db from \"../../firebase\";\r\n\r\n//------------------//----------\r\nconst SidebarChannels = ({rooms,setRooms}) => {\r\n\r\n//const channelArray=useSelector(state=>state.channel)\r\n//const dispatch=useDispatch()\r\n const channelInfos=useSelector(state=>state.channels)\r\n\r\n//const [channelView, setChannelView] = useState(false)\r\nconst addChannel=()=>{\r\n    const promptName =prompt(\"add new channel\");\r\n  if(promptName){\r\n    const statement=channelInfos?.some(item=>\r\n     item.name===promptName\r\n      )\r\n    if(statement){\r\n      alert(\"Sorry such name is already existed.Choose another name please!\")\r\n    }\r\n    else{\r\n   db.collection('rooms').add({\r\n        name:promptName\r\n    })\r\n }\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n/*const seeChannels=()=>{\r\nsetChannelView(!channelView)\r\n}*/\r\n//---------------------------\r\n//----c-------\r\n\r\n  return (\r\n    <Channels>\r\n      <ChannelAdd >\r\n         Channels\r\n         <Icon onClick={addChannel}><AddIcon/></Icon>\r\n      </ChannelAdd>\r\n       <NewChannel />\r\n   </Channels>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default SidebarChannels;\r\n\r\nconst Channels=styled.div`\r\n\r\n`\r\n\r\nconst ChannelAdd=styled.div`\r\ncolor:white;\r\nmargin:10px 6px;\r\nalign-items:center;\r\ndisplay:flex;\r\njustify-content:space-between;\r\nfont-size:18px;\r\npadding-left:10px;\r\ncursor:pointer;\r\n\r\n:hover{\r\n    background-color:orange;\r\n\r\n}\r\n\r\n`\r\nconst Icon=styled.div`\r\ncursor:pointer;\r\ncolor:black;\r\nalign-items:center;\r\n:hover{\r\n\tcolor:white\r\n}\r\n\r\n`\r\n\r\n","import React from 'react';\r\nimport SidebarHeader from \"./sidebarHeader\"\r\nimport SidebarItems from \"./sidebarItems\"\r\nimport SidebarChannels from \"./sidebarChannels\"\r\nimport styled from \"styled-components\";\r\n\r\nconst Sidebar = ({rooms,setRooms}) => {\r\n  return (\r\n    <Container>\r\n    <Header>\r\n    <SidebarHeader/>\r\n    </Header>\r\n    <Items>\r\n    <SidebarItems/>\r\n    <SidebarChannels\r\n    setRooms={setRooms}\r\n     rooms={rooms}/>\r\n    \r\n    </Items>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst Container=styled.div`\r\n display:grid;\r\n grid-template-rows:70px auto;\r\n background-color:purple;\r\n\r\n`\r\nconst Header=styled.div`\r\npadding:10px 5px;\r\nborder-bottom:0.5px solid gray;\r\n`\r\nconst Items=styled.div`\r\nheight:60vh;\r\n`\r\n","import React,{useState,useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport {useParams} from 'react-router-dom';\r\n//import {useSelector,useDispatch} from \"react-redux\";\r\nimport db from \"../../firebase\";\r\n//import {addName} from \"../../ReduxToolkit/channelName\";\r\n\r\n\r\nconst ChatsHeader = (props) => {\r\n    const [channelName, setChannelName] = useState()\r\n    const [messages, setMessages] = useState([])\r\n //const channelInfos=useSelector(state=>state.channels)\r\n //const channelName=useSelector(state=>state.channelName)\r\n//const dispatch=useDispatch();\r\n\r\nconst {channelId} = useParams()\r\n\r\n\r\nconst getChannel = () =>{\r\n    db.collection(\"rooms\")\r\n    .doc(channelId)\r\n    .onSnapshot((snapshot)=>{\r\n        setChannelName(snapshot.data())\r\n        console.log(snapshot.data())\r\n        //dispatch(addName(snapshot.data().name))\r\n    })\r\n}\r\n\r\nuseEffect(() => {\r\n    getChannel();\r\n\r\n}, [channelId])\r\n\r\n  return (\r\n    <Header>\r\n            <Channel>\r\n          <ChannelName>\r\n          <p>#{channelName !==undefined ? channelName.name: \"kanal\"}</p> \r\n       </ChannelName>\r\n         <ChannelInfo> \r\n         Company-wide announcements\r\n         </ChannelInfo>\r\n    </Channel>\r\n    <ChannelDetails>\r\n     <DetailInfo>\r\n         Details inf\r\n     </DetailInfo>\r\n        <DetailIcon>\r\n            <InfoOutlinedIcon/>\r\n        </DetailIcon>\r\n    </ChannelDetails>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default ChatsHeader;\r\n\r\nconst Header=styled.div`\r\nwidth:100%;\r\nheight:100%;\r\nbackground-color:greenyellow;\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\nborder-bottom:rgba(83,39,83,13)\r\n`\r\nconst Channel=styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nfont-size:12px;\r\npadding-left:6px\r\n\r\n`\r\nconst ChannelName=styled.div`\r\nfont-size:16px;\r\nfont-family:serif;\r\nfont-weight:bolder;\r\ncolor:black;\r\n\r\n`\r\n\r\nconst ChannelInfo=styled.div`\r\ncolor:#606060;\r\nfont-size:13px\r\n`\r\nconst ChannelDetails=styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\ncursor:pointer\r\n\r\n`\r\nconst DetailInfo=styled.div`\r\npadding-bottom:3px;\r\nfont-size:15px;\r\ncolor:#403737;\r\n\r\n`\r\nconst DetailIcon=styled.div`\r\ncolor:gray;\r\npadding: 0 10px;\r\n`\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState=[]\r\n\r\nconst TextMessages=createSlice({\r\n\tname:\"textMessages\",\r\n\tinitialState,\r\n\treducers:{\r\n      addMessage:(state,action)=>{\r\n      \treturn [...state,action.payload]  \r\n}\r\n\t}\r\n})\r\nexport const {addMessage}=TextMessages.actions\r\nexport default TextMessages.reducer","export default __webpack_public_path__ + \"static/media/otabek.bd5ec802.jpg\";","import React,{useState,useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {addMessage} from '../../ReduxToolkit/textMessages'\r\nimport AvatarPhoto from \"./otabek.jpg\";\r\nimport {useParams} from 'react-router-dom';\r\nimport db from \"../../firebase\";\r\nimport firebase from 'firebase';\r\nimport {auth} from '../../firebase'\r\n\r\nconst ChatInputComponent = (props) => {\r\nconst [text, setText] = useState('')\r\nconst [user, setUser] = useState('')\r\nconst {channelId}=useParams()\r\n//-------------\r\nconst getEmail=()=>{\r\n  auth.onAuthStateChanged((user)=>{\r\nsetUser(user.email)\r\n  })\r\n}\r\n useEffect(() => {\r\n \tgetEmail()\r\n }, [user])\r\n//----------------\r\nconst getMessages=()=>{\r\n\tconsole.log(\"hahhah\")\r\n\r\n\tconst payload={\r\n\t\tuser:user,\r\n\t\ttext:text,\r\n\t\tuserImage:AvatarPhoto,\r\n\t\ttimeStamp:firebase.firestore.Timestamp.now().toDate().toGMTString()\r\n\r\n\t}\r\n\tconsole.log(payload)\r\n\tdb.collection(\"rooms\")\r\n\t.doc(channelId)\r\n\t.collection(\"messages\")\r\n\t.add(payload)\r\n}\r\n\r\n//---------------\r\nconst onChangeHandler=e=>{\r\nsetText(e.target.value)\t\r\n}\r\n\t//---------------------\r\nconst sendMessage=(e)=>{\r\n\te.preventDefault()\r\n\tgetMessages()\r\n\tsetText('')\r\n}\r\n\t//---------------\r\n  return (\r\n    <Container>\r\n\r\n    <InputContainer>\r\n    <form >\r\n    <input type=\"text\" \r\n    value={text}\r\n    onChange={onChangeHandler}\r\n    placeholder=\"Message here...\"/>\r\n<SendButton \r\ntype=\"submit\"\r\nonClick={sendMessage}\r\n>\r\n<SendIcon />\r\n</SendButton>\r\n    </form>\r\n    </InputContainer>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChatInputComponent;\r\n\r\nconst Container=styled.div`\r\nbackground-color:orange;\r\nwidth:98%;\r\nborder:none;\r\nmargin:0 auto;\r\nmargin-bottom:40px;\r\n`\r\nconst InputContainer=styled.div`\r\nwidth:90%;\r\nmargin:auto;\r\npadding:11px 0;\r\nbackground-color:transparent;\r\nform {\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\npadding:12px 10px;\r\noutline:0.3px solid gray;\r\nborder-radius:7px;\r\nheight:40px;\r\n\r\n}\r\ninput{\r\n\tborder-radius:4px;\r\n\tborder:none;\r\n\tflex:1;\r\n\theight:30px;\r\n\tpadding-left:5px;\r\n\tbackground-color:transparent;\r\n\t:hover{\r\n\t\tbackground-color:transparent\r\n\t}\r\n\t:focus{\r\n\t\tbackground-color:transparent;\r\n\t\toutline:none\r\n\t}\r\n\r\n}\r\n`\r\nconst Icon=styled.div`\r\nheight:30px;\r\ncursor:pointer;\r\nbackground:gray;\r\n border-top-left-radius:2px; \r\n border-bottom-left-radius:2px; \r\nheight:40px;\r\nwidth:40px;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nmargin-right:-10px;\r\n\r\n`\r\nconst SendButton=styled.button`\r\nheight:30px;\r\ncursor:pointer;\r\nbackground:gray;\r\n border-top-left-radius:2px; \r\n border-bottom-left-radius:2px; \r\nheight:40px;\r\nwidth:40px;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nmargin-right:-10px;\r\n\r\n\r\n`","import React,{useState,useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport AvatarPhoto from \"./otabek.jpg\";\r\nimport {useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport db from \"../../firebase\";\r\n\r\nconst ChatMessages = (props) => {\r\n\r\nconst [messages, setMessages] = useState([])\r\nconst {channelId}=useParams()\r\n\r\nconst getMessages = () =>{\r\n    db.collection(\"rooms\")\r\n    .doc(channelId)\r\n    .collection(\"messages\")\r\n    .orderBy('timeStamp', 'asc')\r\n    .onSnapshot((snapshot)=>{\r\n        let texts=snapshot.docs.map((doc)=>doc.data())\r\n        console.log(texts)\r\n        setMessages(texts)\r\n    }) \r\n}\r\n\r\nuseEffect(() => {\r\n\tgetMessages()\r\n\r\n}, [channelId])\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n          {messages.length>0 && \r\n            messages.map(item =>(\r\n         <MessageContent>\r\n         <img src={item.userImage} alt=\"avatar\" />\r\n         <div>\r\n             <Name>\r\n            \t<p >{item.user}</p>\r\n                <Time>\r\n                   <p>{item.timeStamp}</p>\r\n                </Time>\r\n             </Name>\r\n             <Content>\r\n                <p>{item.text}</p>\r\n             </Content>\r\n             </div>\r\n        </MessageContent> \r\n            ))  \r\n           }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChatMessages;\r\n\r\nconst Container=styled.div`\r\nbackground-color:#d9c7c7;\r\nheight:100vh;\r\noverflow-y:scroll;\r\n`\r\nconst UserImage=styled.img`\r\nheight:60px;\r\n\tmargin-top:3px;\r\n\tpadding:9px;\r\n\tcursor:pointer;\r\n\tborder-radius:6px\r\n\r\n`\r\n\r\nconst MessageContent=styled.div`\r\npadding:1px;\r\ndisplay:flex;\r\nimg{\r\n\theight:60px;\r\n\tmargin-top:3px;\r\n\tpadding:9px;\r\n\tcursor:pointer;\r\n\tborder-radius:6px\r\n\r\n}\r\n`\r\nconst Name=styled.div`\r\nmargin-top:7px;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nfont-size:16px;\r\nfont-weight:bolder;\r\n\r\n@media only screen and (max-width:710px){\r\n\tmargin-top:-5px;\r\n}\r\n\r\n`\r\nconst Time=styled.div`\r\nmargin-left:8px;\r\np{\r\n\tfont-size:14px;\r\n\tcolor:rgba(0,0,0,0.4);\r\n\r\n}\r\n@media only screen and (max-width:710px){\r\n\tmargin-top:5px;\r\n}\r\n\r\n\r\n`\r\nconst Content=styled.div`\r\nmargin-top:-12px;\r\nfont-size:14px;\r\n@media only screen and (max-width:720px){\r\n\tmargin-top:-26px;\r\n}\r\n\r\n`\r\n\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport ChatsHeader from './chatsHeader';\r\nimport ChatInputComponent from './chatInputComponent';\r\nimport ChatMessagesComponent from './ChatMessages';\r\n\r\n\r\nconst Chats = (props) => {\r\n\r\n//----------------------------\r\n  return (\r\n    <ChatContainer>\r\n       <ChatsHeader/>\r\n<ChatMessagesComponent/>\r\n<ChatInputComponent/>\r\n    </ChatContainer>\r\n  )\r\n}\r\n\r\nexport default Chats;\r\n\r\nconst ChatContainer=styled.div`\r\ndisplay:grid;\r\n grid-template-rows:70px auto min-content;\r\n min-height:0;\r\n background-color:#d9c7c7;\r\n \r\n`\r\n","export default __webpack_public_path__ + \"static/media/slackFoto.792989f3.jpg\";","import React,{useState,useEffect}from 'react';\r\nimport styled from \"styled-components\";\r\nimport {auth} from '../firebase';\r\nimport slackFoto from './slackFoto.jpg'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n//import {addUsername} from '../ReduxToolkit/userSlice'\r\n\r\nconst LoginPage = () => {\r\nconst [user, setUser] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [emailError, setEmailError] = useState('')\r\nconst [passwordError, setPasswordError] = useState('')\r\nconst [hasAccount, setHasAccount] = useState(true);\r\n//const [inputValue, setInputValue] = useState(false);\r\n//----------------\r\nconsole.log(user.email)\r\n\r\n//--------------------\r\n\r\nconst clearInputs=()=>{\r\n\tsetEmail(\"\")\r\n\tsetPassword('')\r\n}\r\n//--------------------\r\nconst clearErrors=()=>{\r\n\tsetEmailError(\"\")\r\n\tsetPasswordError('')\r\n}\r\n//---------------\r\n\r\nconst handleLogin=(user)=>{\r\nclearErrors()\r\n\tauth\r\n\t.signInWithEmailAndPassword(email,password)\r\n\t.then((auth)=>{\r\n\t\t// logged iin redirect to hhomepage\r\n\t})\r\n\t.catch(error=>{\r\nswitch(error.code){\r\ncase \"auth/invalid-email\":\r\ncase \"auth/user-disabled\":\r\ncase \"auth/user-not-found\":\r\nsetEmailError(error.message);\r\nbreak;\r\ncase \"auth/wrong-password\":\r\nsetPasswordError(error.message);\r\nbreak;\r\n\t}})\r\n\r\n\t\r\n}\r\n//--------------------------------\r\nconst handleSignUp=()=>{\r\n\tclearErrors()\r\n\tauth\r\n\t.createUserWithEmailAndPassword(email,password)\r\n\t.then((auth)=>{\r\n\t\t//create a user and logged in\r\n\r\n\t})\r\n\t.catch(error=>{\r\nswitch(error.code){\r\ncase \"auth/email-already-in-use\":\r\ncase \"auth/invalid-email\":\r\nsetEmailError(error.message);\r\nbreak;\r\ncase \"auth/weak-password\":\r\nsetPasswordError(error.message);\r\nbreak;\r\n\t}})\r\n\t\r\n\r\n}\r\n\r\n//------------------------------------\r\nconst authListener=()=>{\r\n\tconsole.log(\"ishladi\")\r\n\tauth\r\n\t.onAuthStateChanged((user)=>{\r\n\t\tif(user){\r\n\t\t\tlocalStorage.setItem(\"ishtirokchi\",user.email)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetUser(\"\")\r\n\t\t}\r\n\t})\r\n\t\r\n}\r\n//---------------------------------\r\nuseEffect(() => {\r\nauthListener()\r\n}, [])\r\n\r\n\r\n//------------------------------------\r\n  return (\r\n  \r\n    <Container>\r\n   \r\n      <Content>\r\n      <Image \r\n       src={slackFoto} alt=\"slack\"/>\r\n      <h1 >Sign in Slack</h1>\r\n      <form onSubmit={e=>e.preventDefault()}>\r\n            <Input>\r\n\r\n      <input \r\n      required\r\n      autofocus\r\n      type =\"email\"\r\n      value={email}\r\n       onChange={e=>{\r\n       \tsetEmail(e.target.value)\r\n       }}\r\n       />\r\n   \r\n      {email ? <Label>\r\n      \t<label>Usernamer: </label>\r\n      \t</Label>:\r\n      <label>Usernamer: </label>}\r\n\r\n\r\n  \r\n<h6>{emailError}</h6>\r\n</Input>\r\n\r\n      <Input>\r\n  <input \r\n  autofocus\r\n  required\r\n      type =\"password\"\r\n      value={password}\r\n       onChange={e=>{\r\n       \tsetPassword(e.target.value)\r\n       }}\r\n       />\r\n \r\n      <label>Password: </label>\r\n \r\n       <h6>{passwordError}</h6>\r\n       </Input>\r\n{\r\n\thasAccount ? (\r\n\t\t<div>\r\n         <button onClick={()=>handleLogin()}>Sign in </button>\r\n         <p>Dont have an account?<span onClick={()=>{\r\n         \tsetHasAccount(!hasAccount)\r\n         }}>Sign up</span></p>\r\n\t\t</div>\r\n\t):(\r\n\t<div>\r\n         <button onClick={handleSignUp}>Sign up</button>\r\n         <p>Have an account?\r\n          <span onClick={()=>{\r\n         \tsetHasAccount(!hasAccount)\r\n         }}> Sign in</span></p>\r\n        \r\n\t</div>\r\n)\r\n\r\n}\r\n      </form>\r\n     \r\n       </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoginPage;\r\n\r\nconst Container=styled.div`\r\nbackground-color:#f2e6e6;\r\nheight:100vh;\r\nwidth:100%;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center\r\n\r\n\r\n`\r\nconst Content=styled.div`\r\npadding:70px 100px;\r\nbackground-color:white;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\ntext-align:center;\r\n\r\nh1{\r\n\tfont-weight:bold;\r\n\tfont-family:\"Mukta\",sans-serif;\r\n}\r\nform{\r\n\ttext-align:center;\r\n\talign-items:center;\r\n\tmargin-top:20px;\r\n\tdisplay:flex;\r\n\tflex-direction:column;\r\nposition:relative;\r\n\r\n}\r\nlabel{\r\n\ttext-align:left;\r\n\tfont-family:\"Mukta\",sans-serif;\r\n\ttop:11px;\r\n\tleft:0;\r\n   padding-left:3px;\r\n\tposition:absolute;\r\n\ttransition:0.7s;\r\n\tpointer-events:none;\r\n\r\n}\r\ninput{\r\n\theight:60px;\r\n\tpadding-left:3px;\r\nborder:none;\r\nbackground-color:transparent;\r\nborder-radius:4px;\r\nwidth:300px;\r\nheight:35px;\r\nborder-bottom:1px solid gray;\r\noutline:none;\r\nmargin-bottom:7px;\r\n\r\n:focus   + label,\r\n:valid  + label {\r\n\ttop:-15px;\r\n\tfont-size:15px;\r\n\tcolor:gray;\r\n\tpadding-bottom:4px\r\n\r\n\r\n}\r\n}\r\nh6{\r\n\t\talign-items:center;\r\n\t\ttext-align:center;\r\n\t\tpadding:0 20px;\r\n\t\twidth:300px;\r\n\r\n\t\tfont-family:\"Mukta\",sans-serif;\r\n\t\tpadding-top:4px;\r\n\t\tcolor:red;\r\n\t\tfont-weight:bolder;\r\n\r\n}\r\np{\r\n\ttext-align:right;\r\n\t\tfont-family:\"Mukta\",sans-serif;\r\n}\r\nspan{\r\n\tcolor:red;\r\nfont-family:\"Mukta\",sans-serif;\r\nfont-weight:bold;\r\ncursor:pointer;\r\n}\r\nbutton{\r\n\tjustify-content:center;\r\nbackground-color:royalblue;\r\npadding:10px 0;\r\nwidth:300px;\r\nmargin-bottom:10px;\r\nborder:none;\r\nborder-radius:3px;\r\ncolor:white;\r\n:hover{\r\n\tbackground-color:coral\r\n}\r\n}\r\n\r\n`\r\nconst Image=styled.img`\r\nheight:150px;\r\n:hover{\r\n\tcursor:pointer\r\n}\r\n`\r\nconst Label=styled.div`\r\nposition:absolute;\r\n\ttop:-26px;\r\n\tfont-size:15px;\r\n\tcolor:gray;\r\n\tpadding-bottom:4px\r\n\t`\r\nconst Input=styled.div`\r\nposition:relative\r\n\r\n`\r\n\r\n","import React,{useEffect,useState} from 'react';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport styled from \"styled-components\";\nimport Navbar from \"./components/navbar\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport Chats from \"./components/chats/chats\";\nimport LoginPage from \"./pages/login\";\nimport db,{auth} from \"./firebase\";\nimport {useSelector,useDispatch} from \"react-redux\";\n//import {addUsername,deleteUsername} from './ReduxToolkit/userSlice.js'\nimport {addChannel} from './ReduxToolkit/channelSlice.js'\n//import {fire} from './firebase';\n\nfunction App() {\n\n const dispatch=useDispatch()\n const userName=useSelector(state=>state.userName)\n  const [userEmail, setUserEmail] = useState('')\n  //----------------\n  const getChannels=()=>{\n    db.collection('rooms').onSnapshot(snapshot=>{\n      const infos=snapshot.docs.map(doc=>{\n        return{\n          id:doc.id,\n          name:doc.data().name\n        }\n      })\n    dispatch(addChannel(infos))\n\n})\n  }\n\n\n  //----------------\n  const getUser=()=>{\n    auth.onAuthStateChanged((user)=>{\n      if(user){\n      setUserEmail(user.email)\n    }\n    else(\n      setUserEmail(\"\")\n      )\n    })\n  }\n  //------------------------\n  useEffect(() => {\n   getChannels()\n   getUser()\n  }, [])\n  //console.log(userEmail)\n  //------------------------\n return (\n  <Router>  \n  {userEmail ?\n    <div className=\"App\">\n      <Container>\n        <Navbar/>\n          <Main>\n           <Sidebar/> \n             <Switch>\n              <Route path=\"/room/:channelId\">\n                <Chats/>\n              </Route>\n               <Route path=\"/\">\n                 <EmptyChat>\n                 <p>Select or Create channel</p>\n                 </EmptyChat>\n              </Route>\n\n             </Switch>\n\n          </Main>\n       </Container>\n    </div> :\n\n    <LoginPage/>}\n    </Router>\n  );\n}\n\nexport default App;\n\nconst Container=styled.div`\nbackground-color:white;\ndisplay:grid;\ngrid-template-rows: 50px minmax(0,1fr); \n`\n\nconst Main=styled.div`\nbackground-color:royalblue;\ndisplay:grid;\ngrid-template-columns:230px auto;\n\n`\nconst EmptyChat=styled.div`\nbackground-color:coralblue;\nheight:100vh;\np{\n  color:white;\n  padding:5px;\n  padding-left:10px;\n  font-size:18px;\n}\n\n\n`\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState=[];\r\n\r\nconst channelName=createSlice({\r\n\tname:\"channelName\",\r\n\tinitialState,\r\n\treducers:{\r\n      addName:(state,action)=>{\r\n      \tstate.push(action.payload)\r\n      }\r\n\r\n\r\n\t}\r\n})\r\nexport const {addName}=channelName.actions\r\nexport default channelName.reducer","import {combineReducers} from \"redux\";\r\nimport channelReducer from './channelSlice';\r\nimport channelNameReducer from './channelName';\r\nimport textMessagesReducer from './textMessages';\r\n\r\n const rootReducer=combineReducers({\r\n\tchannels:channelReducer,\r\n\tchannelName:channelNameReducer,\r\n\ttextMessages:textMessagesReducer\r\n\r\n})\r\n export default rootReducer;","import { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nexport const store=configureStore({\r\n\treducer:rootReducer\r\n})","import React,{createContext,useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./ReduxToolkit/store\";\n//import Appp from './Appp';\n//import {StateProvider} from './useContext/useContext';\n//import Reducer,{initialState} from './useContext/reducer'\n\n\n\nReactDOM.render(\n\t<Provider store={store}>\n    <App/>\n    </Provider>,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}